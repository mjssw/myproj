// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: msgid.proto

#ifndef PROTOBUF_msgid_2eproto__INCLUDED
#define PROTOBUF_msgid_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
// @@protoc_insertion_point(includes)

namespace sglib {
namespace msgid {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_msgid_2eproto();
void protobuf_AssignDesc_msgid_2eproto();
void protobuf_ShutdownFile_msgid_2eproto();


enum EMsgId {
  SG_FORWARD_MSG_REQ = 1,
  SG_CLOSE_CLIENT_REQ = 2,
  SG_SET_FORWARD_SERVER = 3,
  GS_FORWARD_MSG_REQ = 4,
  GS_REPORT_STATUS_REQ = 5,
  GS_CLIENT_CLOSE_NOTIFY = 6,
  SG_CONNECT_NEW_SERVER_NTF = 7,
  CL_USER_LOGIN_REQ = 101,
  LC_USER_LOGIN_RSP = 102,
  LC_GAME_INFO_NOTIFY = 103,
  LCT_USER_LOGIN_REQ = 104,
  CL_USER_REGISTER_REQ = 105,
  LC_USER_REGISTER_RSP = 106,
  LC_GROUP_GATE_NOTIFY = 107,
  LC_USER_BASIC_INFO_NOTIFY = 108,
  CTL_USER_LOGIN_RSP = 301,
  CTL_GAME_INFO_NOTIFY = 302,
  CTS_ENTER_GAME_RSP = 303,
  SCT_USER_LOGOUT_NOTIFY = 304,
  SCT_ENTER_GAME_REQ = 305,
  CTL_GROUP_GATE_NOTIFY = 306,
  CS_USER_ENTER_GAME_REQ = 501,
  SC_USER_ENTER_GAME_RSP = 502,
  CS_LOGIN_GAME_REQ = 503,
  SC_LOGIN_GAME_RSP = 504,
  CS_ENTER_ROOM_REQ = 505,
  SC_ENTER_ROOM_RSP = 506,
  SC_ENTER_ROOM_NTF = 507,
  CS_LEAVE_ROOM_REQ = 508,
  SC_LEAVE_ROOM_RSP = 509,
  SC_LEAVE_ROOM_NTF = 510,
  CS_USER_LOGOUT = 511,
  GMCT_REPORT_GAME_INFO = 701,
  SGM_REPORT_GAME_INFO = 702,
  SGM_ENTER_GAME_REQ = 703,
  GMS_ENTER_GAME_RSP = 704,
  SGM_GATE_CLOSE_NTF = 705,
  GMCT_GATE_CLOSE_NTF = 706,
  SGM_DYNAMIC_START_NTF = 707,
  GMS_DYNAMIC_SERVERSTART_NTF = 708,
  GMCT_GAME_SERVER_CLOSE_NTF = 709,
  GMGM_GAME_INFO_REPORT = 710,
  GMS_CREATE_GAMEROOM_REQ = 711,
  SGM_CREATE_GAMEROOM_RSP = 712,
  GPGG_ADD_GROUPID_NTF = 951,
  GPGG_DEL_GROUPID_NTF = 952,
  GPGM_GP_GATE_CLOSE_NTF = 953,
  GMCT_GP_GATE_CLOSE_NTF = 954,
  GPGM_DYNAMIC_START_NTF = 955,
  GMGP_DYNAMIC_SERVERSTART_NTF = 956,
  GMCT_GP_SERVER_CLOSE_NTF = 9357,
  GPGM_REPORT_STATUS_INFO = 958,
  GMCT_GP_GROUP_GATE_INFO = 959,
  GPGM_USER_LOGIN_NTF = 960,
  GPGM_USER_LOGOUT_NTF = 961,
  GPGM_GROUP_CREATE_REQ = 962,
  GMGP_GROUP_CREATE_NTF = 963,
  GPGM_GROUP_CREATE_RESULT = 964,
  GMGP_GROUP_CREATE_RSP = 965,
  GPGM_GROUP_ADD_MEMBER_REQ = 966,
  GMGP_GROUP_ADD_MEMBER_RSP = 967,
  GPGM_AGREE_ASK_MEMBER_INFO_REQ = 968,
  GMGP_AGREE_ASK_MEMBER_INFO_RSP = 969,
  GMGP_GROUP_LOAD_NTF = 970,
  GPGM_GROUP_LOAD_RESULT = 971,
  GMGP_GROUP_MEMBER_ONLINE_NTF = 972,
  GMGP_GROUP_MEMBER_OFFLINE_NTF = 973,
  GPGM_GROUP_MEMBER_LEAVE_NTF = 974,
  GPGM_GROUP_DELETE_NTF = 975,
  GPGM_GROUP_CREATE_GAMEROOM_REQ = 976,
  GMGP_GROUP_CREATE_GAMEROOM_RSP = 977,
  GMGM_ASK_CREATE_GAMEROOM_REQ = 978,
  GMGM_ASK_CREATE_GAMEROOM_RSP = 979,
  GPGG_LOGIN_SUCCESS_NTF = 980,
  CS_GROUP_LOGIN_REQ = 903,
  SC_GROUP_LOGIN_RSP = 904,
  SC_GROUP_LIST_UPDATE = 905,
  SC_GROUP_INFO_UPDATE = 906,
  CS_GROUP_CREATE_REQ = 907,
  SC_GROUP_CREATE_RSP = 908,
  CS_GROUP_SEARCH_REQ = 909,
  SC_GROUP_SEARCH_RSP = 910,
  CS_GROUP_JOIN_REQ = 911,
  SC_GROUP_JOIN_RSP = 912,
  CS_GROUP_ADD_MEMBER_REQ = 913,
  SC_GROUP_ADD_MEMBER_RSP = 914,
  SC_GROUP_ASK_JOIN_NTF = 915,
  CS_GROUP_AGREE_JOIN_REQ = 916,
  CS_GROUP_LEAVE_REQ = 917,
  SC_GROUP_LEAVE_RSP = 918,
  SC_GROUP_MEMBER_LEAVE_NTF = 919,
  CS_GROUP_DELETE_REQ = 920,
  SC_GROUP_DELETE_RSP = 921,
  SC_GROUP_DELETE_NTF = 922,
  CS_GROUP_MESSAGE_REQ = 923,
  SC_GROUP_MESSAGE_NTF = 924,
  SC_GROUP_MEMBER_JOIN_NTF = 925,
  SC_GROUP_MEMBER_ONLINE = 926,
  SC_GROUP_MEMBER_OFFLINE = 927,
  CS_GROUP_CREATE_GAMEROOM_REQ = 928,
  SC_GROUP_CREATE_GAMEROOM_RSP = 929,
  SC_GROUP_CREATE_GAMEROOM_NTF = 930,
  CS_GROUP_MESSAGE_HISTORY_REQ = 931,
  SC_GROUP_MESSAGE_HISTORY_RSP = 932,
  CS_TETRIS_READY_REQ = 1001,
  SC_TETRIS_READY_RSP = 1002,
  SC_TETRIS_GAMESTART_NOTIFY = 1003,
  CS_TETRIS_GAMELOST_REQ = 1004,
  SC_TETRIS_GAMEEND_NOTIFY = 1005,
  CS_TETRIS_PUT_BLOCK_REQ = 1006,
  CS_TETRIS_CLEAR_BLOCK_REQ = 1007,
  SC_TETRIS_PUT_BLOCK_NOTIFY = 1008,
  SC_TETRIS_CLEAR_BLOCK_NOTIFY = 1009,
  SC_TETRIS_READY_NOTIFY = 1010,
  SC_TETRIS_ROOM_INFO_NOTIFY = 1011,
  CS_TEST_MSG_REQ = 80001,
  SC_TEST_MSG_RSP = 80002
};
bool EMsgId_IsValid(int value);
const EMsgId EMsgId_MIN = SG_FORWARD_MSG_REQ;
const EMsgId EMsgId_MAX = SC_TEST_MSG_RSP;
const int EMsgId_ARRAYSIZE = EMsgId_MAX + 1;

const ::google::protobuf::EnumDescriptor* EMsgId_descriptor();
inline const ::std::string& EMsgId_Name(EMsgId value) {
  return ::google::protobuf::internal::NameOfEnum(
    EMsgId_descriptor(), value);
}
inline bool EMsgId_Parse(
    const ::std::string& name, EMsgId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EMsgId>(
    EMsgId_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace msgid
}  // namespace sglib

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::sglib::msgid::EMsgId>() {
  return ::sglib::msgid::EMsgId_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_msgid_2eproto__INCLUDED
